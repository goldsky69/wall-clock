/*load custom fonts*/
@font-face {
	font-family: calligrapher;
	src: url('./fonts/calligrapher-regular.ttf');
}

@font-face {
	font-family: weatherSunday;
	src: url('./fonts/weather-sunday.otf');
}

html {
	font-size: 62.50%;
}

:root {
	/*colors*/
	--color-primary:   #000;
	--color-secondary: #fff;
	--color-danger:    #fc0606;
	--color-success:   #00b4d8;
	--color-seconds:   var(--color-primary);
  /*fonts*/
	--font-1: calligrapher, sans-serif;
	--font-2: weatherSunday, calligrapher, sans-serif;
  /* svg props  */
	--strokelimit: 10;
	--linear-gradient: url(#linear-gradient);
}

[data-theme="light"]{
	/*colors*/
	--color-primary:   #000;
	--color-secondary: #fff;
	--color-danger:    #fc0606;
	--color-success:   #00b4d8;
	--color-seconds:   var(--color-primary);
  /*fonts*/
	--font-1: calligrapher, sans-serif;
	--font-2: weatherSunday, calligrapher, sans-serif;
  /* svg props  */
	--strokelimit: 10;
	--linear-gradient: url(#linear-gradient);
}

[data-theme="dark"]{
    --color-primary: #fff;
		--color-secondary: #000;
		--color-danger: var(--color-primary);
		--color-success: #343a40;
		--color-seconds: #fc0606;
     /*fonts*/
		--font-1: calligrapher;
		--font-2: weatherSunday, calligrapher;
     /* svg props  */
		--strokelimit: 10;
		--linear-gradient: var(--color-primary);
}

/*_____________________________*/
body {
	box-sizing: border-box;
	font-family: sans-serif;
	position: relative;
	background-color: var(--color-secondary);
	color: var(--color-primary);
}

* {
	box-sizing: inherit;
	margin: 0;
	padding: 0;
	inset: 0;
}

svg {
	pointer-events: none;
}

#hourHand,#minHand, #secHand {
	transform-origin: center;
}

#minsBars {
	fill: none;
	stroke: var(--color-primary);
	stroke-width: 4;
	stroke-linecap: round;
	stroke-miterlimit: var(--strokelimit);
}

#hoursBars{
	fill: var(--color-danger);
	stroke: var(--color-danger);
	stroke-miterlimit: var(--strokelimit);
}

#numbers {
	font-size: 4.8rem;
	font-family: var(--font-1);
	fill: var(--color-primary);
}

#hourHand {
	fill: var(--linear-gradient);
}

#minHand {
	fill: var(--linear-gradient);
	stroke: var(--color-secondary);
	stroke-width: 0.3296;
	stroke-miterlimit: var(--strokelimit);
}

#secHand {
	fill: none;
	stroke: var(--color-seconds);
	stroke-width: 5.5669;
	stroke-miterlimit: var(--strokelimit);
}

#secHand circle {
	fill: #fff;
}

#designer{
	font-size: 7rem;
	font-family: var(--font-2);
	fill: var(--color-success);
}

/*stage 1  formating the default checkbox  */
input[type='checkbox'] {
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
}

input[type='checkbox']:focus {
	outline: none;
}

/*stage 2  draw the hollow  */
input[type='checkbox'] {
	width: 5.4rem;
	height: 3.1rem;
	border: 3px solid hsla(64, 10%, 40%, 1);
	border-radius: 15px;
	background-color: hsla(64, 10%, 40%, 0.5);
	position: relative;
	padding: 0;
}
/*stage 3  draw the ball in hollow with Psuodoelement  */
input[type='checkbox']::before {
	content: '';
	width: 2.5rem;
	height: 2.5rem;
	background-color: white;
	position: absolute;
	border-radius: 50%;
	box-shadow: 0.2rem 0.5rem 1rem rgba(0, 0, 0, 0.4);
	transition: all 0.3s ease-out;
}

input[type='checkbox']:checked::before {
	transform: translate(2.3rem);
	box-shadow: none;
	transition: all 0.3s cubic-bezier(0.6, 1.5, 0.9, 1.2);
}

.switches-container {
	display: flex;
	float: right;
	transform: translate(-30%, 20%);
}

.switches-container label {
	margin: 1rem 0 0 4rem;
	float: left;
}

@media screen and (max-width: 1300px) {
	.switches-container {
		margin: 5rem 0;
	}
}

@media screen and (max-width: 800px) {
	.switches--container {
		margin: auto;
		margin-top: 8rem;
	}
}